@page "/buttongroup/overview"

<h2>ButtonGroup / Overview</h2>
<div class="sample-block">
    <IntegralUIButtonGroup AllowFocus="false" SelectedIndex="@selIndex" CheckedChanged="@OnButtonChecked" SelectionMode="IntegralUIButtonSelection.Multi">
        <IntegralUIButton>Button 1</IntegralUIButton>
        <IntegralUIButton>Button 2</IntegralUIButton>
        <IntegralUIButton>Button 3</IntegralUIButton>
    </IntegralUIButtonGroup>
    <div class="feature-help">
        <p><span class="initial-space"></span><strong><span class="code-name">IntegralUI</span> Button</strong> is a Blazor Component that manages actions of multiple buttons. Depending on selection mode, you can have one or multiple buttons checked.</p>
        <p><span class="initial-space"></span>Any changes to ColorScheme, Enabled state or Theme are auto-applied to all buttons present in the group.</p><br />
        <p><span class="initial-space"></span>In this example, button appearance is changed via CSS using custom properties.</p><br />
        <p><span class="initial-space"></span>The following properties and events are supported:</p>
        <ul class="feature-points">
            <li><span class="code-name">AllowAnimation</span> - determines whether animations are allowed or not, default is true</li>
            <li><span class="code-name">Checked</span> - Specifies whether RadioButton is checked or not: true or false</li>
            <li><span class="code-name">ColorScheme</span> - specifies the current color scheme in use: Light or Dark, by default is set to Light</li>
            <li><span class="code-name">Enabled</span> - determines whether the PopOver is enabled or disabled</li>
            <li><span class="code-name">Name</span> - Uniquely identifies the component</li>
            <li><span class="code-name">SelectedIndex</span> - specifies the index of currently selected button</li>
            <li><span class="code-name">SelectionMode</span> - determines whether one or multiple buttons are selectable, by default is One</li>
            <li><span class="code-name">Theme</span> - specifies the current Theme in use, by default is set to Office</li>
            <li class="feature-points-break"><br /></li>
            <li><span class="code-name">ButtonChecked</span> - Occurs when Checked property changes</li>
            <li><span class="code-name">EnabledChanged</span> - occurs when Enabled property value changes</li>
        </ul>
    </div>
</div>

@code {

    private int selIndex = 0;

    private void OnButtonChecked(IntegralUIButtonEventArgs e)
    {
        selIndex = e.Index;

        string checkValue = e.Checked ? "checked" : "unchecked";

        Console.WriteLine($"Button at position: {e.Index} is {checkValue}");
    }

}
