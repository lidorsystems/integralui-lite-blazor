@inject NavigationManager NavigationManager

<IntegralUITreeList Id="nav-tree" Items="tree" TItem="TreeListItem" Title="Components" ItemClick="@listItemClicked"></IntegralUITreeList>

@code {

    private List<TreeListItem> tree = new()
    {
        new TreeListItem { Text = "Button", Link = "/button/overview" },
        new TreeListItem { Text = "ButtonGroup", Link = "/buttongroup/overview" },
        new TreeListItem { Text = "Card", Link = "/card/overview" },
        new TreeListItem { Text = "CheckBox", Link = "/checkbox/overview" },
        new TreeListItem { Text = "List", Link = "/list/overview" },
        new TreeListItem { Text = "PopOver", Link = "/popover/overview" },
        new TreeListItem { Text = "RadioButton", Link = "/radiobutton/overview" },
        new TreeListItem { Text = "Select", Link = "/select/overview" },
        new TreeListItem { Text = "Tooltip", Link = "/tooltip/overview" },
        new TreeListItem { Text = "TreeList", Link = "/treelist/overview" }
   };

    private class TreeListItem
    {
        public bool Expanded { get; set; } = true;
        public string? Id { get; set; } = string.Empty;
        public List<TreeListItem> Items { get; set; } = [];
        public string? Link { get; set; }
        public string? ParentId { get; set; } = string.Empty;
        public string? Text { get; set; }
        public IntegralUIItemType Type { get; set; } = IntegralUIItemType.Item;
        public bool Selected { get; set; } = false;
    }

    private void listItemClicked(IntegralUITreeListClickEventArgs<TreeListItem> e)
    {
        if (!string.IsNullOrEmpty(e.Item?.Link))
            NavigationManager.NavigateTo(e.Item.Link, false);
    }
}